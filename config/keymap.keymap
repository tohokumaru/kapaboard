#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp Q  &kp W     &kp E         &kp R           &kp T      &kp K_COPY   &none          &kp Y      &kp U  &kp I  &kp O  &kp P  &kp AT_SIGN
&kp TAB     &kp A  &kp S     &kp D         &kp F           &kp G      &kp K_PASTE  &none          &kp H      &kp J  &kp K  &kp L  &none  &none
&kp LSHIFT  &kp Z  &kp X     &kp C         &kp V           &kp B                                  &kp N      &kp M  &none  &none  &none  &none
                   &kp LWIN  &kp LEFT_ALT  &kp LANGUAGE_4  &kp SPACE  &kp DELETE   &kp BACKSPACE  &kp ENTER                       &none
            >;
        };

        layer_1 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };
    };
};
